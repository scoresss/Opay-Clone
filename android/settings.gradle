// Full code for android/settings.gradle (REVISED and complete)
pluginManagement {
    // This section defines how Gradle resolves plugins.
    // We've removed the manual FLUTTER_SDK_PATH detection
    // as the Flutter Gradle plugin handles this automatically or it's
    // passed via gradle.properties in CI.

    repositories {
        google()            // Google's Maven repository
        mavenCentral()      // Maven Central repository
        gradlePluginPortal() // For resolving Gradle plugins from the portal
    }

    // Define the plugins used in your project and their versions.
    // 'apply false' means these plugins are defined here but applied in individual modules (e.g., app/build.gradle).
    plugins {
        id "dev.flutter.flutter-plugin-apply" version "1.0.0" apply false // The Flutter Gradle plugin itself
        id "com.android.application" version "8.4.0" apply false // Android Gradle Plugin (matches version from project build.gradle)
        id "org.jetbrains.kotlin.android" version "1.9.0" apply false // Kotlin Android Plugin (matches version from project build.gradle)
        // Add any other top-level plugins used in your app/build.gradle here with apply false
    }
}

// Defines how project dependencies are resolved
dependencyResolutionManagement {
    // This setting ensures that repositories are declared in a consistent way.
    // 'FAIL_ON_PROJECT_REPOS' means subprojects should not declare their own repositories.
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}

// Sets the root project name for your Android build.
// This is typically just 'android' for a Flutter project.
rootProject.name = "android"

// THIS IS CRUCIAL: It tells Gradle to include your 'app' module in the build.
// Without this, Gradle cannot find the tasks like 'assembleRelease'.
include ':app'
